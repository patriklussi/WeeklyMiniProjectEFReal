// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeeklyMiniProjectEF;

#nullable disable

namespace WeeklyMiniProjectEF.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20221209114301_addedStuff")]
    partial class addedStuff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeeklyMiniProjectEF.Assets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PurchasePrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssetType = "Phone",
                            Model = "5s",
                            Name = "Iphone",
                            OfficeId = 1,
                            PurchaseDate = new DateTime(2022, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 256
                        },
                        new
                        {
                            Id = 2,
                            AssetType = "Laptop",
                            Model = "Elitebook",
                            Name = "HP",
                            OfficeId = 2,
                            PurchaseDate = new DateTime(2021, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 2551
                        },
                        new
                        {
                            Id = 3,
                            AssetType = "Computer",
                            Model = "D0nkey",
                            Name = "Taurus",
                            OfficeId = 3,
                            PurchaseDate = new DateTime(2015, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchasePrice = 1546
                        });
                });

            modelBuilder.Entity("WeeklyMiniProjectEF.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrencyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyType = "SEK",
                            OfficeName = "Sweden"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyType = "USD",
                            OfficeName = "USA"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyType = "EUR",
                            OfficeName = "Germany"
                        });
                });

            modelBuilder.Entity("WeeklyMiniProjectEF.Assets", b =>
                {
                    b.HasOne("WeeklyMiniProjectEF.Office", "Office")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("WeeklyMiniProjectEF.Office", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
